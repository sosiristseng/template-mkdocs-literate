name: Build notebooks and publish

on:
  workflow_dispatch:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NPROC: '2' # Number of Julia processes to run the notebooks

jobs:
  CI:
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner	}}
        password: ${{ github.token }}
    - name: Get docker image hash
      id: img
      run: echo "hash=${{ hashFiles('requirements.txt', 'Project.toml', 'Manifest.toml', 'src/**', 'env.Dockerfile') }}" >> "$GITHUB_OUTPUT"
    - name: Build Docker container
      env:
        IMG: ghcr.io/${{ github.repository }}:${{ steps.img.outputs.hash }}
      run: |
        docker manifest inspect ${IMG} && exit 0
        docker build -f env.Dockerfile -t ${IMG} .
        docker push ${IMG}
    - name: Run Literate notebooks
      env:
        IMG: ghcr.io/${{ github.repository }}:${{ steps.img.outputs.hash }}
      run: >
        docker run --rm
        -w /tmp -v ${{ github.workspace }}:/tmp
        -e JULIA_PROJECT=@.
        ${IMG}
        julia --color=yes -p ${{ env.NPROC }} literate.jl
    - name: Setup micromamba
      uses: mamba-org/setup-micromamba@v1
      with:
        environment-file: conda.yml
        cache-environment: true
        post-cleanup: all
    - name: Build website
      shell: micromamba-shell {0}
      run: mkdocs build -d public/
    - name: Upload pages artifact
      if: ${{ github.ref == 'refs/heads/main' }}
      uses: actions/upload-pages-artifact@v2
      with:
        path: public/

  deploy:
    name: Deploy to GitHub pages
    needs: CI
    if: ${{ github.ref == 'refs/heads/main'}}
    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write # to deploy to Pages
      id-token: write # to verify the deployment originates from an appropriate source
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v2
